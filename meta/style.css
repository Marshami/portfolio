body {
    font-family: Arial, sans-serif;
    max-width: 900px;
    margin: auto;
    padding: 1em;
  }
  
  h1, h2 {
    text-align: center;
  }
  
  /* ============ */
  /* Original Stats .stats, etc. from your code... */
  /* ============ */
  
  .stats {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 10px;
    max-width: 400px;
    margin: auto;
    padding: 1em;
    background: #f9f9f9;
    border-radius: 8px;
    box-shadow: 2px 2px 10px rgba(0,0,0,0.1);
  }
  
  .tooltip {
    position: fixed;
    top: 1em;
    left: 1em;
    padding: 10px;
    background: #fff;
    border: 1px solid #ddd;
    border-radius: 5px;
    box-shadow: 0 4px 10px rgba(0,0,0,0.2);
  }
  
  /* Circle transitions in scatterplot */
  circle {
    transition: 200ms;
    transform-origin: center;
    transform-box: fill-box;
  }
  circle:hover {
    transform: scale(1.5);
  }
  
  /* ======================================== */
  /* LAB 8: PINNED SCROLLYTELLING LAYOUT */
  /* ======================================== */
  #scrolly-layout {
    display: grid;
    grid-template-columns: 1fr 1.5fr; /* left narrower pinned, right wider text */
    gap: 2rem;
    margin-top: 2rem;
    margin-bottom: 3rem;
    position: relative;
  }
  
  /* The pinned chart container: 
     We'll fix its position while the user scrolls */
  #pinned-chart-container {
    position: sticky;   /* make it stick while scrolling */
    top: 2rem;          /* so it doesn't hide under top of page */
    height: 80vh;       /* keep a decent height */
    border: 1px solid #ccc;
    background: #fafafa;
  }
  
  /* The pinned chart inside that container */
  #pinned-chart {
    width: 100%;
    height: 100%;
    /* We'll do the actual D3 <svg> inside JS */
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  /* The right side with scrollable text. */
  #text-scroller {
    position: relative;
    height: 80vh;  /* same as pinned chart's height, so you see a direct side-by-side effect */
    overflow: hidden; /* hide overflow, we'll manage scroll inside a child. */
    border: 1px solid #ddd;
    background: #fff;
  }
  
  /* #scroll-narrative is the real scroll container */
  #scroll-narrative {
    position: relative;
    width: 100%;
    height: 100%;
    overflow-y: scroll; /* user scroll here */
  }
  
  #scroll-spacer {
    position: absolute;
    top: 0;
    width: 100%;
    pointer-events: none;
    /* We’ll set its height dynamically from JS if we want. */
  }
  
  #scroll-steps {
    position: absolute;
    top: 0;
    width: 100%;
  }
  
  /* Each “step” of text scrollytelling */
  .step {
    position: absolute;
    width: 100%;
    padding: 1rem;
    border-bottom: 1px solid #eee;
  }
  
  /* ============= */
  /* FILE SIZE RACE 
     using <dl class="files"> 
     from your earlier code 
  ============== */
  .files {
    display: grid;
    grid-template-columns: auto 1fr;
    gap: 0.5rem 1rem;
    max-width: 100%;
    margin-top: 1em;
    background: #fdfdfd;
    padding: 1em;
    border: 1px solid #eee;
    border-radius: 8px;
  }
  
  .files > div {
    display: grid;
    grid-template-columns: subgrid;
    grid-column: 1 / -1;
  }
  
  .files dt {
    grid-column: 1;
    margin-bottom: 0.5em;
    font-weight: bold;
  }
  
  .files dd {
    grid-column: 2;
    display: flex;
    flex-wrap: wrap;
    gap: 0.25em;
    margin: 0;
  }
  
  /* Each “line” dot for the unit chart */
  .line {
    width: 0.5em;
    aspect-ratio: 1;
    border-radius: 50%;
    transition: transform 300ms;
  }
  @starting-style {
    .line {
      transform: scale(0);
    }
  }  